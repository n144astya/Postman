{
	"info": {
		"_postman_id": "c112f862-a340-49bd-a846-5328ae517890",
		"name": "Pet store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28709553",
		"_collection_link": "https://www.postman.com/satellite-geoscientist-12379620/workspace/my-workspace/collection/28709553-c112f862-a340-49bd-a846-5328ae517890?action=share&creator=28709553&source=collection_link"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "Add new pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"id = pm.response.json().id\r",
									"pm.collectionVariables.set(\"pet_ID\", id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"CatDog\"\r\n  },\r\n  \"name\": \"КотоПес\",\r\n  \"photoUrls\": [\r\n    \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fposmotreli.su%2Fvar%2Fwww%2Fhtml%2Fimages%2Fthumb%2F%25D0%259A%25D0%25BE%25D1%2582%25D0%25BE%25D0%25BF%25D1%2591%25D1%2581.jpg%2F300px-%25D0%259A%25D0%25BE%25D1%2582%25D0%25BE%25D0%25BF%25D1%2591%25D1%2581.jpg&tbnid=UGcUOKWTEZ3xUM&vet=12ahUKEwjp2d-w66-AAxUppycCHRpXDNEQMygFegUIARDzAQ..i&imgrefurl=https%3A%2F%2Fposmotreli.su%2Findex.php%2F%25D0%259A%25D0%25BE%25D1%2582%25D0%25BE%25D0%25BF%25D1%2591%25D1%2581&docid=5GY8VffCBeQrFM&w=300&h=240&q=%D0%BA%D0%BE%D1%82%D0%BE%D0%BF%D0%B5%D1%81&ved=2ahUKEwjp2d-w66-AAxUppycCHRpXDNEQMygFegUIARDzAQ\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"CatDog\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Pet Name is 'КотоПес'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.name).to.eql(\"КотоПес\")\r",
									"    pm.expect(responseJson.category.name).to.eql(\"CatDog\")  \r",
									"});\r",
									"\r",
									"// pm.test(\"Status code is 404 and mesage 'Pet not found'\", function() {\r",
									"//     const responseJson = pm.response.json();\r",
									"//     pm.response.to.have.status(404)\r",
									"//     pm.expect(responseJson.message).to.eql(\"Pet not found\")\r",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{pet_ID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploads an image",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "additionalMetadata",
									"value": "Metadata",
									"type": "text",
									"disabled": true
								},
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/n14as/Pictures/pet_01.jpg"
								}
							]
						},
						"url": {
							"raw": "{{url}}/pet/{{pet_ID}}/uploadImage",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}",
								"uploadImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "update an existing pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Pet Name is 'КотоПес'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.name).to.eql(\"КотоПес2\")\r",
									"    pm.expect(responseJson.category.name).to.eql(\"CatDog\")  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{pet_ID}},\r\n  \"category\": {\r\n    \"id\": 1,\r\n    \"name\": \"CatDog\"\r\n  },\r\n  \"name\": \"КотоПес2\",\r\n  \"photoUrls\": [\r\n    \"https://www.google.com/imgres?imgurl=https%3A%2F%2Fposmotreli.su%2Fvar%2Fwww%2Fhtml%2Fimages%2Fthumb%2F%25D0%259A%25D0%25BE%25D1%2582%25D0%25BE%25D0%25BF%25D1%2591%25D1%2581.jpg%2F300px-%25D0%259A%25D0%25BE%25D1%2582%25D0%25BE%25D0%25BF%25D1%2591%25D1%2581.jpg&tbnid=UGcUOKWTEZ3xUM&vet=12ahUKEwjp2d-w66-AAxUppycCHRpXDNEQMygFegUIARDzAQ..i&imgrefurl=https%3A%2F%2Fposmotreli.su%2Findex.php%2F%25D0%259A%25D0%25BE%25D1%2582%25D0%25BE%25D0%25BF%25D1%2591%25D1%2581&docid=5GY8VffCBeQrFM&w=300&h=240&q=%D0%BA%D0%BE%D1%82%D0%BE%D0%BF%D0%B5%D1%81&ved=2ahUKEwjp2d-w66-AAxUppycCHRpXDNEQMygFegUIARDzAQ\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"CatDog\"\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"name\": \"CatDog 2\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Pet Name is 'КотоПес'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.name).to.eql(\"КотоПес\")\r",
									"    pm.expect(responseJson.category.name).to.eql(\"CatDog\")  \r",
									"    pm.expect(responseJson.status).to.eql(\"pending\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/findByStatus?status=pending",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "pending"
								},
								{
									"key": "status",
									"value": "sold",
									"disabled": true
								},
								{
									"key": "status",
									"value": "available",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Pet Name is 'КотоПес'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.name).to.eql(\"{{pet_ID}}\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{pet_ID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updates a pet in the store with form data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Pet Name is 'КотоПес'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.name).to.eql(\"gtc\")\r",
									"    pm.expect(responseJson.category.name).to.eql(\"CatDog\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "status",
									"value": "pending",
									"type": "text"
								},
								{
									"key": "name",
									"value": "gtc",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/pet/{{pet_ID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletes a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and mesage contain Pet ID\", function() {\r",
									"     const responseJson = pm.response.json();\r",
									"     pm.response.to.have.status(200)\r",
									"     pm.expect(responseJson.message).to.eq(JSON.stringify(pm.collectionVariables.get(\"pet_ID\")))\r",
									" });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "78",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/pet/{{pet_ID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "store",
			"item": [
				{
					"name": "placed an order  for a pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									" pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"id = pm.response.json().id\r",
									"pm.collectionVariables.set(\"orderId\", id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{$randomInt}},\r\n  \"petId\": {{pet_ID}},\r\n  \"quantity\": 1,\r\n  \"shipDate\": \"2023-07-28T13:19:29.304Z\",\r\n  \"status\": \"placed\",\r\n  \"complete\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/store/order",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "find purchase order by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.variables.set (\"{{orderId}}\", _.random(1,10));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"id = pm.response.json().id\r",
									"pm.collectionVariables.set(\"orderId\", id)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/store/order/{{orderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete purchase order by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and mesage contain orderId\", function() {\r",
									"     const responseJson = pm.response.json();\r",
									"     pm.response.to.have.status(200)\r",
									"     pm.expect(responseJson.message).to.eq(JSON.stringify(pm.collectionVariables.get(\"orderId\")))\r",
									" });\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/store/order/{{orderId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return pet inventories by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/store/inventory",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Creates list of users  with given input array",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Creat user'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.message).to.eql(\"ok\")\r",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"id\": {{userId}},\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"phone\": \"{{$randomPhone}}\",\r\n    \"userStatus\": 25\r\n  },\r\n  {\r\n    \"id\": {{userId}},\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"phone\": \"{{$randomPhone}}\",\r\n    \"userStatus\": 25\r\n  },\r\n  {\r\n    \"id\": {{userId}},\r\n    \"username\": \"{{$randomUserName}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"phone\": \"{{$randomPhone}}\",\r\n    \"userStatus\": 25\r\n  }\r\n]\r\n\r\n\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/createWithList",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"createWithList"
							]
						}
					},
					"response": []
				},
				{
					"name": "Creat user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Creat user'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": {{userId}},\r\n    \"username\": \"{{UserName}}\",\r\n    \"firstName\": \"{{$randomFirstName}}\",\r\n    \"lastName\": \"{{$randomLastName}}\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"password\": \"{{$randomPassword}}\",\r\n    \"phone\": \"{{$randomPhoneNumber}}\",\r\n    \"userStatus\": 25\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by user name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.username).to.eql(pm.collectionVariables.get(\"UserName\"))  \r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"user_id\", pm.response.json().id)\r",
									"pm.collectionVariables.set(\"user_first_name\", pm.response.json().firstName)\r",
									"pm.collectionVariables.set(\"user_last_name\", pm.response.json().lastName)\r",
									"pm.collectionVariables.set(\"user_email\", pm.response.json().email)\r",
									"pm.collectionVariables.set(\"user_password\", pm.response.json().password)\r",
									"pm.collectionVariables.set(\"user_phone\", pm.response.json().phone)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/{{UserName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{UserName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updated user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 and Creat user'\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{user_id}},\r\n  \"username\": \"{{UserName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"email\": \"{{$randomEmail}}\",\r\n  \"password\": \"{{user_password}}\",\r\n  \"phone\": \"{{user_phone}}\",\r\n  \"userStatus\": 25\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/user/{{UserName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{UserName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.username).to.eql(pm.collectionVariables.get(\"UserName\"))  \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/user/{{UserName}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"{{UserName}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs user into the system",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.username).to.eql(pm.collectionVariables.get(\"UserName\"))  \r",
									"    pm.expect(responseJson.username).to.eql(pm.collectionVariables.get(\"password\")) \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logs out current logged in user session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.response.to.have.status(200)\r",
									"    pm.expect(responseJson.message).to.eql(\"ok\")  \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/user/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://petstore.swagger.io/v2",
			"type": "string"
		},
		{
			"key": "pet_ID",
			"value": ""
		},
		{
			"key": "orderId",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "UserName",
			"value": "CatDogOwner",
			"type": "string"
		},
		{
			"key": "user_first_name",
			"value": ""
		},
		{
			"key": "user_last_name",
			"value": ""
		},
		{
			"key": "user_email",
			"value": ""
		},
		{
			"key": "user_password",
			"value": ""
		},
		{
			"key": "user_phone",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		}
	]
}